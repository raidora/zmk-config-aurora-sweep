/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/keys.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>

#include "est_definitions.h"

#define XXXXX &none
#define _____ &trans

#define LSFT_Z        &mt LSFT Z 
#define RSFT_MINS     &mt RSFT SLASH 
#define LCTL_A        &mt LCTL A
#define RCTL_ODIA     &mt RCTL ODIA

#define DEFA 0
#define SYMB 1 
#define NAVG 2
#define NUMS 3
#define KEYB 4

&mt {
	flavor = "hold-preferred";
	tapping-term-ms = <200>;
	quick-tap-ms = <250>;
	retro-tap;
};

&lt {
	flavor = "hold-preferred";
	tapping-term-ms = <200>;
	retro-tap;
};

&sk {
	release-after-ms = <2000>;
	ignore-modifiers;
};

/ {
	combos { 
		compatible = "zmk,combos";
		combo_adia {
			timeout-ms = <50>;
			key-positions = <18 19>;
			bindings = <&kp ADIA>;
		};
		combo_left_middle {
			timeout-ms = <200>;
			key-positions = <11 12 13>;
			bindings = <&mo NUMS>;
		};
		combo_left_thumb {
			timeout-ms = <200>;
			key-positions = <30 31>;
			bindings = <&mt LCTL ESC>;
		};
		combo_right_top {
			timeout-ms = <200>;
			key-positions = <6 7 8>;
			bindings = <&kp TAB>;
		};
		combo_right_middle {
			timeout-ms = <200>;
			key-positions = <16 17 18>;
			bindings = <&kp RET>;
		};
		combo_right_thumb {
			timeout-ms = <200>;
			key-positions = <32 33>;
			bindings = <&kp LGUI>;
		};
combo_outer_middle_pinkies {
			timeout-ms = <200>;
			key-positions = <10 19>;
			bindings = <&mo KEYB>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		//  -------------------------------------------------------------
		// |  Q  |  W  |  E  |  R  |  T  | |  Y  |  U  |  I  |  O  |  P  |
		// |  A  |  S  |  D  |  F  |  G  | |  H  |  I  |  K  |  L  Ä  Ö  |
		// |  Z  |  X  |  C  |  V  |  B  | |  N  |  M  |  ,  |  .  |  -  |
		//  -----------------| ENT | SPC | | ESC | BSPC|-----------------
		//                   |     | NAV | | SYM |     |
		//                   |  LCTL_ESC | |    META   |
		default_layer {
			bindings = <
				&kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P
				&kp A  &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp ODIA
				LSFT_Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT RSFT_MINS
				&kp RET &lt NAVG SPC &lt SYMB ESC &kp BSPC  
				>;
		};
		//  -------------------------------------------------------------
		// |  %  |  `  |  [  |  <  |  /  | |  \  |  >  |  ]  |  &  |  +  |
		// |  |  |  "  |  *  |  (  |  {  | |  }  |  )  |  =  |  '  |  $  |
		// |  ˇ  |  ^  |  ~  |  !  |  @  | |  #  |  ?  |  ;  |  :  |  _  |
		//  -----------------|     |     | |     |     |-----------------
		//                   |     |     | |     |     |
		//                   |           | |           |
		sym_layer {
			bindings = <
				EE_PERC EE_BKTK EE_LBRC EE_LABK EE_SLSH   EE_BSLS EE_RABK EE_RBRC EE_AMPR EE_PLUS 
				EE_PIPE EE_DQUO EE_ASTR EE_LPRN EE_LCBR   EE_RCBR EE_RPRN EE_EQLS EE_QUOT EE_DOLR
				EE_CARN EE_CIRC EE_TLDE EE_EXCL EE_ATSI   EE_HSTG EE_QSTN EE_SCLN EE_COLN EE_USCR
				XXXXX &trans XXXXX XXXXX
				>;
		};
		//  -------------------------------------------------------------
		// | TAB |     |     |     |     | |     |     |     |     | BSPC|
		// |     | LGUI| LALT| LCTL|     | | LEFT| DOWN|  UP |RIGHT|  Õ  |
		// | LSFT|     |     |     |     | |     |     |     |     |  Ü  |
		//  -----------------|     |     | |     |     |-----------------
		//                   |     |     | |     |     |
		//                   |           | |           |
		nav_layer {
			bindings = <
				&kp TAB XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX &kp BSPC
				&kp TAB &sk LGUI &sk LALT &sk LCTL XXXXX &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp OTIL
				&kp LSFT &kp LGUI &kp LALT &kp LCTL XXXXX XXXXX XXXXX XXXXX XXXXX &kp UDIA
				XXXXX XXXXX XXXXX XXXXX 
				>;
		};
		//  -------------------------------------------------------------
		// |     |     |     |     |     | |     |  N7 |  N8 |  N9 |    |
		// |     |     |SCGUI|     |     | |     |  N4 |  N5 |  N6 |    |
		// |     |     |     |     |     | |     |  N1 |  N2 |  N3 |    |
		//  -----------------|     |     | |     |     |-----------------
		//                   |     |     | |     |     |
		//                   |           | |           |
		num_layer {
			bindings = <
				XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX &kp N7 &kp N8 &kp N9 XXXXX
				XXXXX XXXXX &kp LS(LC(LGUI)) XXXXX XXXXX XXXXX &kp N4 &kp N5 &kp N6 XXXXX
				XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX &kp N1 &kp N2 &kp N3 XXXXX
				XXXXX XXXXX XXXXX &kp N0
				>;
		};
		//  -------------------------------------------------------------
		// |     |     |     |     |     | |     |     |     |     |     |
		// |     |     |     |     |     | |BTCLR| BT0 | BT1 | BT2 | BT3 |
		// |     |     |     |     |     | |     |     |     |     |     |
		//  -----------------|     |     | |     |     |-----------------
		//                   |     |     | |     |     |
		//                   |           | |           |
		keyb_layer {
			bindings = <
				XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX
				XXXXX XXXXX XXXXX XXXXX XXXXX &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 XXXXX
				XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX
				XXXXX XXXXX XXXXX XXXXX
				>;
		};
	};
};
